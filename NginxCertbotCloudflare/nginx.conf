events {}

http {
  server {
    listen 80;
    server_name youroldmangaming.com;  # Add your domain name here

    # Redirect HTTP to HTTPS
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name youroldmangaming.com;  # Add your domain name here

    root /var/www/;
    index index.html;

    ssl_certificate /etc/letsencrypt/live/youroldmangaming.com-0002/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/youroldmangaming.com-0002/privkey.pem;

    # Ensure you have created the dhparam file with:
    # openssl dhparam -out /etc/letsencrypt/ssl-dhparams.pem 2048
    ssl_dhparam /etc/keys/ssl-dhparams.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:1m;  # about 4000 sessions
    ssl_session_tickets off;

    # Intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # Optional: add security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    location / {
      try_files $uri $uri/ =404;
    }
  }
}








